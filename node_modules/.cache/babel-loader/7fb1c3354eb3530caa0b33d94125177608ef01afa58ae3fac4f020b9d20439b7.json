{"ast":null,"code":"var _jsxFileName = \"/Users/song-gayeong/Gayoung/react_simple_diary/src/DiaryItem.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiaryItem = _ref => {\n  _s();\n  let {\n    onEdit,\n    onRemove,\n    author,\n    content,\n    emotion,\n    created_date,\n    id\n  } = _ref;\n  const [isEdit, setIsEdit] = useState(false);\n  // isEdit이면 수정을 하지 않는 현재상태 = false\n  // setIsEdit은 수정을 하는 상태가 아니라 업데이트 되는 상태(즉, 업데이트 되지 않으면 현재상태가 되고, 업데이트 되면 업데이트 되는 내용이 현재상태가 됨)\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n  // 토글을 하면, 수정을 하는 상태(!isEdit)로 변화해서 그게 업데이트 되는 현재상태인 setIsEdit이 !isEdit의 상태로 업데이트해서 가지고 있음\n  // 그러니까 onClick을 할때마다 토글을 하면 이에 따라 변화한 상태(isEdit -> !isEdit / !isEdit->isEdit)가 setIsEdit이 됨\n\n  const localContentInput = useRef();\n  const handleRemove = () => {\n    if (window.confirm(`${id} 번째 일기를 삭제 하시겠습니까?`)) {\n      onRemove(id);\n    }\n  };\n  //return이하에 함수를 넣게되면 코드가 지저분하고 길어지기 때문에 위에 handleRemove함수를 따로 만들어서 빼줌\n\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content);\n  };\n  const handleEdit = () => {\n    if (localContent.length < 5) {\n      return;\n    }\n    onEdit();\n  };\n  const [localContent, setLocalContent] = useState(content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC791\\uC131\\uC790: \", author, \" | \\uAC10\\uC815\\uC810\\uC218: \", emotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(created_date).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: localContentInput,\n          value: localContent,\n          onChange: e => setLocalContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: content\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isEdit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuitEdit,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRemove,\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleIsEdit,\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryItem, \"IUip8g11HssSOfRHAiM/oyHEWek=\");\n_c = DiaryItem;\nexport default DiaryItem;\nvar _c;\n$RefreshReg$(_c, \"DiaryItem\");","map":{"version":3,"names":["React","useRef","useState","DiaryItem","onEdit","onRemove","author","content","emotion","created_date","id","isEdit","setIsEdit","toggleIsEdit","localContentInput","handleRemove","window","confirm","handleQuitEdit","setLocalContent","handleEdit","localContent","length","Date","toLocaleString","e","target","value"],"sources":["/Users/song-gayeong/Gayoung/react_simple_diary/src/DiaryItem.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst DiaryItem = ({\n  onEdit,\n  onRemove,\n  author,\n  content,\n  emotion,\n  created_date,\n  id,\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  // isEdit이면 수정을 하지 않는 현재상태 = false\n  // setIsEdit은 수정을 하는 상태가 아니라 업데이트 되는 상태(즉, 업데이트 되지 않으면 현재상태가 되고, 업데이트 되면 업데이트 되는 내용이 현재상태가 됨)\n  const toggleIsEdit = () => setIsEdit(!isEdit);\n  // 토글을 하면, 수정을 하는 상태(!isEdit)로 변화해서 그게 업데이트 되는 현재상태인 setIsEdit이 !isEdit의 상태로 업데이트해서 가지고 있음\n  // 그러니까 onClick을 할때마다 토글을 하면 이에 따라 변화한 상태(isEdit -> !isEdit / !isEdit->isEdit)가 setIsEdit이 됨\n\n  const localContentInput = useRef();\n  const handleRemove = () => {\n    if (window.confirm(`${id} 번째 일기를 삭제 하시겠습니까?`)) {\n      onRemove(id);\n    }\n  };\n  //return이하에 함수를 넣게되면 코드가 지저분하고 길어지기 때문에 위에 handleRemove함수를 따로 만들어서 빼줌\n\n  const handleQuitEdit = () => {\n    setIsEdit(false);\n    setLocalContent(content);\n  };\n\n  const handleEdit = () => {\n    if (localContent.length < 5) {\n      return;\n    }\n\n    onEdit();\n  };\n  const [localContent, setLocalContent] = useState(content);\n  return (\n    <div className=\"DiaryItem\">\n      <div className=\"info\">\n        <span>\n          작성자: {author} | 감정점수: {emotion}\n        </span>\n        <br />\n        <span className=\"date\">{new Date(created_date).toLocaleString()}</span>\n      </div>\n      <div className=\"content\">\n        {isEdit ? (\n          <>\n            <textarea\n              ref={localContentInput}\n              value={localContent}\n              onChange={(e) => setLocalContent(e.target.value)}\n            ></textarea>\n          </>\n        ) : (\n          <>{content}</>\n        )}\n      </div>\n      {isEdit ? (\n        <>\n          <button onClick={handleQuitEdit}>취소</button>\n          <button onClick={handleEdit}>저장</button>\n        </>\n      ) : (\n        <>\n          <button onClick={handleRemove}>삭제하기</button>\n          <button onClick={toggleIsEdit}>수정하기</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DiaryItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEhD,MAAMC,SAAS,GAAG,QAQZ;EAAA;EAAA,IARa;IACjBC,MAAM;IACNC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,OAAO;IACPC,YAAY;IACZC;EACF,CAAC;EACC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA;EACA,MAAMW,YAAY,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAM,CAAC;EAC7C;EACA;;EAEA,MAAMG,iBAAiB,GAAGb,MAAM,EAAE;EAClC,MAAMc,YAAY,GAAG,MAAM;IACzB,IAAIC,MAAM,CAACC,OAAO,CAAE,GAAEP,EAAG,oBAAmB,CAAC,EAAE;MAC7CL,QAAQ,CAACK,EAAE,CAAC;IACd;EACF,CAAC;EACD;;EAEA,MAAMQ,cAAc,GAAG,MAAM;IAC3BN,SAAS,CAAC,KAAK,CAAC;IAChBO,eAAe,CAACZ,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMa,UAAU,GAAG,MAAM;IACvB,IAAIC,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3B;IACF;IAEAlB,MAAM,EAAE;EACV,CAAC;EACD,MAAM,CAACiB,YAAY,EAAEF,eAAe,CAAC,GAAGjB,QAAQ,CAACK,OAAO,CAAC;EACzD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAA,WAAM,sBACC,EAACD,MAAM,EAAC,+BAAS,EAACE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB,eACP;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAM,SAAS,EAAC,MAAM;QAAA,UAAE,IAAIe,IAAI,CAACd,YAAY,CAAC,CAACe,cAAc;MAAE;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE,eACN;MAAK,SAAS,EAAC,SAAS;MAAA,UACrBb,MAAM,gBACL;QAAA,uBACE;UACE,GAAG,EAAEG,iBAAkB;UACvB,KAAK,EAAEO,YAAa;UACpB,QAAQ,EAAGI,CAAC,IAAKN,eAAe,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MACvC,iBACX,gBAEH;QAAA,UAAGpB;MAAO;IACX;MAAA;MAAA;MAAA;IAAA,QACG,EACLI,MAAM,gBACL;MAAA,wBACE;QAAQ,OAAO,EAAEO,cAAe;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,eAC5C;QAAQ,OAAO,EAAEE,UAAW;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBACvC,gBAEH;MAAA,wBACE;QAAQ,OAAO,EAAEL,YAAa;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC5C;QAAQ,OAAO,EAAEF,YAAa;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAE/C;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAxEIV,SAAS;AAAA,KAATA,SAAS;AA0Ef,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}