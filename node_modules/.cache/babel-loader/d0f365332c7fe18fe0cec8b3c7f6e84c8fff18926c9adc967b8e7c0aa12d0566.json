{"ast":null,"code":"var _jsxFileName = \"/Users/song-gayeong/Gayoung/react_simple_diary/src/DiaryItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryItem = _ref => {\n  _s();\n  let {\n    onRemove,\n    author,\n    content,\n    emotion,\n    created_date,\n    id\n  } = _ref;\n  const [isEdit, setIsEdit] = useState(false);\n  // isEdit이면 수정을 하지 않는 현재상태 = false\n  // setIsEdit은 수정을 하는 상태가 아니라 업데이트 되는 상태(즉, 업데이트 되지 않으면 현재상태가 되고, 업데이트 되면 업데이트 되는 내용이 현재상태가 됨)\n  const toggleIsEdit = setIsEdit(!isEdit);\n  // 토글을 하면, 수정을 하는 상태(!isEdit)로 변화해서 그게 업데이트 되는 현재상태인 setIsEdit이 !isEdit의 상태로 업데이트해서 가지고 있음\n  // 그러니까 onClick을 할때마다 토글을 하면 이에 따라 변화한 상태(isEdit -> !isEdit / !isEdit->isEdit)가 setIsEdit이 됨\n\n  const handleRemove = () => {\n    if (window.confirm(`${id} 번째 일기를 삭제 하시겠습니까?`)) {\n      onRemove(id);\n    }\n  };\n  //return이하에 함수를 넣게되면 코드가 지저분하고 길어지기 때문에 위에 handleRemove함수를 따로 만들어서 빼줌\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC791\\uC131\\uC790: \", author, \" | \\uAC10\\uC815\\uC810\\uC218: \", emotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(created_date).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRemove,\n      children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleIsEdit,\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryItem, \"IoDxBt6oZLuuzPcHAVPOspg3K60=\");\n_c = DiaryItem;\nexport default DiaryItem;\nvar _c;\n$RefreshReg$(_c, \"DiaryItem\");","map":{"version":3,"names":["React","useState","DiaryItem","onRemove","author","content","emotion","created_date","id","isEdit","setIsEdit","toggleIsEdit","handleRemove","window","confirm","Date","toLocaleString"],"sources":["/Users/song-gayeong/Gayoung/react_simple_diary/src/DiaryItem.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst DiaryItem = ({\n  onRemove,\n  author,\n  content,\n  emotion,\n  created_date,\n  id,\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  // isEdit이면 수정을 하지 않는 현재상태 = false\n  // setIsEdit은 수정을 하는 상태가 아니라 업데이트 되는 상태(즉, 업데이트 되지 않으면 현재상태가 되고, 업데이트 되면 업데이트 되는 내용이 현재상태가 됨)\n  const toggleIsEdit = setIsEdit(!isEdit);\n  // 토글을 하면, 수정을 하는 상태(!isEdit)로 변화해서 그게 업데이트 되는 현재상태인 setIsEdit이 !isEdit의 상태로 업데이트해서 가지고 있음\n  // 그러니까 onClick을 할때마다 토글을 하면 이에 따라 변화한 상태(isEdit -> !isEdit / !isEdit->isEdit)가 setIsEdit이 됨\n\n  const handleRemove = () => {\n    if (window.confirm(`${id} 번째 일기를 삭제 하시겠습니까?`)) {\n      onRemove(id);\n    }\n  };\n  //return이하에 함수를 넣게되면 코드가 지저분하고 길어지기 때문에 위에 handleRemove함수를 따로 만들어서 빼줌\n  return (\n    <div className=\"DiaryItem\">\n      <div className=\"info\">\n        <span>\n          작성자: {author} | 감정점수: {emotion}\n        </span>\n        <br />\n        <span className=\"date\">{new Date(created_date).toLocaleString()}</span>\n      </div>\n      <div className=\"content\">{content}</div>\n      <button onClick={handleRemove}>삭제하기</button>\n      <button onClick={toggleIsEdit}>수정하기</button>\n    </div>\n  );\n};\n\nexport default DiaryItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,SAAS,GAAG,QAOZ;EAAA;EAAA,IAPa;IACjBC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,OAAO;IACPC,YAAY;IACZC;EACF,CAAC;EACC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA;EACA,MAAMU,YAAY,GAAGD,SAAS,CAAC,CAACD,MAAM,CAAC;EACvC;EACA;;EAEA,MAAMG,YAAY,GAAG,MAAM;IACzB,IAAIC,MAAM,CAACC,OAAO,CAAE,GAAEN,EAAG,oBAAmB,CAAC,EAAE;MAC7CL,QAAQ,CAACK,EAAE,CAAC;IACd;EACF,CAAC;EACD;EACA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAA,WAAM,sBACC,EAACJ,MAAM,EAAC,+BAAS,EAACE,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB,eACP;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAM,SAAS,EAAC,MAAM;QAAA,UAAE,IAAIS,IAAI,CAACR,YAAY,CAAC,CAACS,cAAc;MAAE;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE,eACN;MAAK,SAAS,EAAC,SAAS;MAAA,UAAEX;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,eACxC;MAAQ,OAAO,EAAEO,YAAa;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAC5C;MAAQ,OAAO,EAAED,YAAa;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV,CAAC;AAAC,GAnCIT,SAAS;AAAA,KAATA,SAAS;AAqCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}