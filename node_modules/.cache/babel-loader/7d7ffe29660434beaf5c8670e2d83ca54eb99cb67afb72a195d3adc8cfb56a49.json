{"ast":null,"code":"var _jsxFileName = \"/Users/song-gayeong/Gayoung/react_simple_diary/src/OptimizeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// const TextView = React.memo(({ text }) => {\n//   useEffect(() => {\n//     console.log(`update :: Text : ${text}`);\n//   });\n//   return <div>{text}</div>;\n// });\n\n// const CountView = React.memo(({ count }) => {\n//   useEffect(() => {\n//     console.log(`update :: count : ${count}`);\n//   });\n//   return <div>{count}</div>;\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterA = _ref => {\n  let {\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_c = CounterA;\nconst CounterB = _ref2 => {\n  let {\n    obj\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obj.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_c2 = CounterB;\nconst OptimizeTest = () => {\n  _s();\n  // const [count, setCount] = useState(1);\n  // const [text, setText] = useState(\"\");\n\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counter A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterA, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count),\n        children: \"A button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counter B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterB, {\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setObj({\n          count: obj.count\n        }),\n        children: \"B Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizeTest, \"vZo1jgdNurzSr6DCpkoVuEAZevg=\");\n_c3 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CounterA\");\n$RefreshReg$(_c2, \"CounterB\");\n$RefreshReg$(_c3, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","CounterA","count","CounterB","obj","OptimizeTest","setCount","setObj","padding"],"sources":["/Users/song-gayeong/Gayoung/react_simple_diary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// const TextView = React.memo(({ text }) => {\n//   useEffect(() => {\n//     console.log(`update :: Text : ${text}`);\n//   });\n//   return <div>{text}</div>;\n// });\n\n// const CountView = React.memo(({ count }) => {\n//   useEffect(() => {\n//     console.log(`update :: count : ${count}`);\n//   });\n//   return <div>{count}</div>;\n// });\n\nconst CounterA = ({ count }) => {\n  return <div>{count}</div>;\n};\n\nconst CounterB = ({ obj }) => {\n  return <div>{obj.count}</div>;\n};\n\nconst OptimizeTest = () => {\n  // const [count, setCount] = useState(1);\n  // const [text, setText] = useState(\"\");\n\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1,\n  });\n\n  return (\n    <div style={{ padding: 20 }}>\n      {/* <div>\n        <h2>Count</h2>\n        <CountView count={count} />\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <h2>Text</h2>\n        <TextView text={text} />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div> */}\n      <div>\n        <h2>Counter A</h2>\n        <CounterA count={count} />\n        <button onClick={() => setCount(count)}>A button</button>\n      </div>\n      <div>\n        <h2>Counter B</h2>\n        <CounterB obj={obj} />\n        <button\n          onClick={() =>\n            setObj({\n              count: obj.count,\n            })\n          }\n        >\n          B Button\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,QAAQ,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EACzB,oBAAO;IAAA,UAAMA;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AAC3B,CAAC;AAAC,KAFID,QAAQ;AAId,MAAME,QAAQ,GAAG,SAAa;EAAA,IAAZ;IAAEC;EAAI,CAAC;EACvB,oBAAO;IAAA,UAAMA,GAAG,CAACF;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AAC/B,CAAC;AAAC,MAFIC,QAAQ;AAId,MAAME,YAAY,GAAG,MAAM;EAAA;EACzB;EACA;;EAEA,MAAM,CAACH,KAAK,EAAEI,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACI,GAAG,EAAEG,MAAM,CAAC,GAAGP,QAAQ,CAAC;IAC7BE,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,oBACE;IAAK,KAAK,EAAE;MAAEM,OAAO,EAAE;IAAG,CAAE;IAAA,wBAW1B;MAAA,wBACE;QAAA,UAAI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,eAClB,QAAC,QAAQ;QAAC,KAAK,EAAEN;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1B;QAAQ,OAAO,EAAE,MAAMI,QAAQ,CAACJ,KAAK,CAAE;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrD,eACN;MAAA,wBACE;QAAA,UAAI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,eAClB,QAAC,QAAQ;QAAC,GAAG,EAAEE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACtB;QACE,OAAO,EAAE,MACPG,MAAM,CAAC;UACLL,KAAK,EAAEE,GAAG,CAACF;QACb,CAAC,CACF;QAAA,UACF;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAzCIG,YAAY;AAAA,MAAZA,YAAY;AA2ClB,eAAeA,YAAY;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}