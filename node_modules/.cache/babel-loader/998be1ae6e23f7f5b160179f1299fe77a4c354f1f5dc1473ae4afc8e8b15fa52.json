{"ast":null,"code":"var _jsxFileName = \"/Users/song-gayeong/Gayoung/react_simple_diary/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport React, { useRef, useState } from \"react\";\nimport Lifecycle from \"./Lifecycle\";\n\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"author 1\",\n//     content: \"content 1\",\n//     emotion: 1,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 2,\n//     author: \"author 2\",\n//     content: \"content 2\",\n//     emotion: 2,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 3,\n//     author: \"author 3\",\n//     content: \"content 3\",\n//     emotion: 3,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 4,\n//     author: \"author 4\",\n//     content: \"content 4\",\n//     emotion: 4,\n//     created_date: new Date().getTime(),\n//   },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  //DiaryEditor.js에서 매개변수를 받아옴 -> 이벤트의 형태일까?\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    setData(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    //매개변수로 받은건, 수정할 대상 그리고 어떤내용을 변경시킬것인지\n    setData(data.map(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n    //map으로 돌려서 it(data)에 id가 수정하려는 id(타겟id)와 일치한다면,\n    //it객체를 전부 받아오고, 그 중 content객체의 내용은 newContent(변경시킬 내용)이 되고,\n    //일치하지 않는다면, it(원래 객체에 저장된 데이터)를 반환\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DiaryEditor","DiaryList","React","useRef","useState","Lifecycle","App","data","setData","dataId","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","console","log","newDiaryList","filter","it","onEdit","newContent","map"],"sources":["/Users/song-gayeong/Gayoung/react_simple_diary/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\nimport React, { useRef, useState } from \"react\";\nimport Lifecycle from \"./Lifecycle\";\n\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"author 1\",\n//     content: \"content 1\",\n//     emotion: 1,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 2,\n//     author: \"author 2\",\n//     content: \"content 2\",\n//     emotion: 2,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 3,\n//     author: \"author 3\",\n//     content: \"content 3\",\n//     emotion: 3,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 4,\n//     author: \"author 4\",\n//     content: \"content 4\",\n//     emotion: 4,\n//     created_date: new Date().getTime(),\n//   },\n// ];\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  //DiaryEditor.js에서 매개변수를 받아옴 -> 이벤트의 형태일까?\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    //매개변수로 받은건, 수정할 대상 그리고 어떤내용을 변경시킬것인지\n    setData(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n    //map으로 돌려서 it(data)에 id가 수정하려는 id(타겟id)와 일치한다면,\n    //it객체를 전부 받아오고, 그 중 content객체의 내용은 newContent(변경시킬 내용)이 되고,\n    //일치하지 않는다면, it(원래 객체에 저장된 데이터)를 반환\n  };\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMK,MAAM,GAAGN,MAAM,CAAC,CAAC,CAAC;;EAExB;EACA,MAAMO,QAAQ,GAAG,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,KAAK;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACzC,MAAMC,OAAO,GAAG;MACdN,MAAM;MACNC,OAAO;MACPC,OAAO;MACPC,YAAY;MACZI,EAAE,EAAET,MAAM,CAACU;IACb,CAAC;IACDV,MAAM,CAACU,OAAO,IAAI,CAAC;IACnBX,OAAO,CAAC,CAACS,OAAO,EAAE,GAAGV,IAAI,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMa,QAAQ,GAAIC,QAAQ,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAE,GAAEF,QAAS,YAAW,CAAC;IACpC,MAAMG,YAAY,GAAGjB,IAAI,CAACkB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACR,EAAE,KAAKG,QAAQ,CAAC;IAC5Db,OAAO,CAACgB,YAAY,CAAC;EACvB,CAAC;EAED,MAAMG,MAAM,GAAG,CAACN,QAAQ,EAAEO,UAAU,KAAK;IACvC;IACApB,OAAO,CACLD,IAAI,CAACsB,GAAG,CAAEH,EAAE,IACVA,EAAE,CAACR,EAAE,KAAKG,QAAQ,GAAG;MAAE,GAAGK,EAAE;MAAEd,OAAO,EAAEgB;IAAW,CAAC,GAAGF,EAAE,CACzD,CACF;IACD;IACA;IACA;EACF,CAAC;;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,WAAW;MAAC,QAAQ,EAAEhB;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACnC,QAAC,SAAS;MAAC,MAAM,EAAEiB,MAAO;MAAC,QAAQ,EAAEP,QAAS;MAAC,SAAS,EAAEb;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEV;AAAC,GA1CQD,GAAG;AAAA,KAAHA,GAAG;AA4CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}